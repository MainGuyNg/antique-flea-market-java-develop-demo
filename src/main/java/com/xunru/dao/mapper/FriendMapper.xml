<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunru.dao.FriendMapper">
    <resultMap id="BaseResultMap" type="com.xunru.model.Friend">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="friend_id" property="friendId" jdbcType="VARCHAR"/>
        <result column="friend_remark" property="friendRemark" jdbcType="VARCHAR"/>
        <result column="friend_group_id" property="friendGroupId" jdbcType="VARCHAR"/>
        <result column="is_special_attention" property="isSpecialAttention" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, friend_id, friend_remark, friend_group_id, is_special_attention, create_time, 
    update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from friend
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from friend
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.xunru.model.Friend">
    insert into friend (id, user_id, friend_id, 
      friend_remark, friend_group_id, is_special_attention, 
      create_time, update_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{friendId,jdbcType=VARCHAR}, 
      #{friendRemark,jdbcType=VARCHAR}, #{friendGroupId,jdbcType=VARCHAR}, #{isSpecialAttention,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.xunru.model.Friend">
        insert into friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendId != null">
                friend_id,
            </if>
            <if test="friendRemark != null">
                friend_remark,
            </if>
            <if test="friendGroupId != null">
                friend_group_id,
            </if>
            <if test="isSpecialAttention != null">
                is_special_attention,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="friendId != null">
                #{friendId,jdbcType=VARCHAR},
            </if>
            <if test="friendRemark != null">
                #{friendRemark,jdbcType=VARCHAR},
            </if>
            <if test="friendGroupId != null">
                #{friendGroupId,jdbcType=VARCHAR},
            </if>
            <if test="isSpecialAttention != null">
                #{isSpecialAttention,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xunru.model.Friend">
        update friend
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="friendId != null">
                friend_id = #{friendId,jdbcType=VARCHAR},
            </if>
            <if test="friendRemark != null">
                friend_remark = #{friendRemark,jdbcType=VARCHAR},
            </if>
            <if test="friendGroupId != null">
                friend_group_id = #{friendGroupId,jdbcType=VARCHAR},
            </if>
            <if test="isSpecialAttention != null">
                is_special_attention = #{isSpecialAttention,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xunru.model.Friend">
    update friend
    set user_id = #{userId,jdbcType=VARCHAR},
      friend_id = #{friendId,jdbcType=VARCHAR},
      friend_remark = #{friendRemark,jdbcType=VARCHAR},
      friend_group_id = #{friendGroupId,jdbcType=VARCHAR},
      is_special_attention = #{isSpecialAttention,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>


    <!--自定义方法-->
    <select id="queryFriendListOrderByFriendRemark" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend
        where user_id=#{userId,jdbcType=VARCHAR}
        order by CONVERT(friend_remark USING gbk) asc
    </select>

    <insert id="addFriend" parameterType="com.xunru.model.Friend">
        insert into friend (id, user_id, friend_id,
          friend_remark, friend_group_id, create_time)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{friendId,jdbcType=VARCHAR},
          #{friendRemark,jdbcType=VARCHAR}, #{friendGroupId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="queryFriendInfoByUserIdAndFriendId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend
        where user_id=#{userId,jdbcType=VARCHAR} and friend_id=#{friendId,jdbcType=VARCHAR}
    </select>
</mapper>